{"version":3,"sources":["components/contactItem/ContactItem.module.css","components/Logo/Logo.module.css","components/filter/Filter.module.css","components/contactList/ContactList.module.css","redux/contacts/contactsActions.js","components/contactForm/ContactForm.js","components/contactItem/contactItem.js","components/contactList/ContactList.js","components/filter/Filter.js","components/Logo/Logo.js","components/App.js","redux/contacts/contactsReducer.js","redux/store.js","index.js","components/contactForm/ContactForm.module.css"],"names":["module","exports","addContact","createAction","name","number","payload","contact","id","uuidv4","removeContact","filterContacts","ContactForm","state","handleChange","target","value","setState","handleSubmit","e","preventDefault","props","onAddContact","this","onSubmit","className","styles","container","label","input","type","autoComplete","onChange","button","Component","mapDispatchToProps","contactsActions","connect","ownProps","item","contacts","items","find","dispatch","onRemoveContact","text","onClick","normalizedFilter","filter","toLowerCase","includes","TransitionGroup","component","list","map","CSSTransition","key","classNames","timeout","onChangeFilter","box","Logo","PhoneBook","in","appear","stylesLogo","unmountOnExit","createReducer","action","length","alert","combineReducers","store","configureStore","reducer","contactsReducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1b8cdb6f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactItem_item__31k-p\",\"button\":\"ContactItem_button__2OQ-f\",\"text\":\"ContactItem_text__2fmag\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Logo_text__2KI9j\",\"appear\":\"Logo_appear__36Y9m\",\"appearActive\":\"Logo_appearActive__2Fyt4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"Filter_box__3VmYA\",\"text\":\"Filter_text__3nvso\",\"input\":\"Filter_input__1Esb9\",\"enter\":\"Filter_enter__2EjR6\",\"enterActive\":\"Filter_enterActive__16JAm\",\"exit\":\"Filter_exit__hdWtL\",\"exitActive\":\"Filter_exitActive__2BAdz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__3R60y\",\"enter\":\"ContactList_enter__FjXG2\",\"enterActive\":\"ContactList_enterActive__2UVr4\",\"exit\":\"ContactList_exit__gfL3E\",\"exitActive\":\"ContactList_exitActive__2wyZd\"};","import { createAction } from '@reduxjs/toolkit';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst addContact = createAction('contacts/add', ({ name, number }) => ({\r\n  payload: { contact: { id: uuidv4(), name, number } },\r\n}));\r\n\r\nconst removeContact = createAction('contacts/remove');\r\nconst filterContacts = createAction('contacts/filterContacts');\r\n\r\nexport default { addContact, removeContact, filterContacts };\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport contactsActions from '../../redux/contacts/contactsActions';\r\nimport styles from './ContactForm.module.css';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = ({ target }) => {\r\n    const { name, value } = target;\r\n\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.onAddContact(this.state);\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.handleSubmit} className={styles.container}>\r\n          <label className={styles.label}>\r\n            Name\r\n            <input\r\n              className={styles.input}\r\n              type=\"name\"\r\n              name=\"name\"\r\n              value={name}\r\n              autoComplete=\"off\"\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n          <label className={styles.label}>\r\n            Number\r\n            <input\r\n              className={styles.input}\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              value={number}\r\n              autoComplete=\"off\"\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n          <button type=\"submit\" className={styles.button}>\r\n            Add contact\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onAddContact: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  onAddContact: contactsActions.addContact,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(ContactForm);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport contactsActions from '../../redux/contacts/contactsActions';\r\nimport styles from './ContactItem.module.css';\r\n\r\nconst ContactItem = ({ name, number, onRemoveContact }) => (\r\n  <li className={styles.item}>\r\n    <p className={styles.text}>{name}:</p>\r\n    <p className={styles.text}>{number}</p>\r\n    <button className={styles.button} type=\"button\" onClick={onRemoveContact}>\r\n      X\r\n    </button>\r\n  </li>\r\n);\r\n\r\nContactItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onRemoveContact: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const item = state.contacts.items.find(item => item.id === ownProps.id);\r\n  return {\r\n    ...item,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n  onRemoveContact: () => dispatch(contactsActions.removeContact(ownProps.id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactItem);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\nimport PropTypes from 'prop-types';\r\nimport ContactItem from '../contactItem/contactItem';\r\nimport styles from './ContactList.module.css';\r\n\r\nconst ContactList = ({ contacts }) => (\r\n  <>\r\n    <TransitionGroup component=\"ul\" className={styles.list}>\r\n      {contacts.map(({ id }) => (\r\n        <CSSTransition key={id} classNames={styles} timeout={250}>\r\n          <ContactItem id={id} />\r\n        </CSSTransition>\r\n      ))}\r\n    </TransitionGroup>\r\n  </>\r\n);\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ).isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  const { items, filter } = state.contacts;\r\n  const normalizedFilter = filter.toLowerCase();\r\n\r\n  const visibleContacts = items.filter(item =>\r\n    item.name.toLowerCase().includes(normalizedFilter),\r\n  );\r\n\r\n  return {\r\n    contacts: visibleContacts,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ContactList);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport contactsActions from '../../redux/contacts/contactsActions';\r\nimport styles from './Filter.module.css';\r\n\r\nconst Filter = ({ value, onChangeFilter }) => (\r\n  <div className={styles.box}>\r\n    <p className={styles.text}>Find contacts by name</p>\r\n    <input\r\n      className={styles.input}\r\n      type=\"text\"\r\n      value={value}\r\n      onChange={e => onChangeFilter(e.target.value)}\r\n    />\r\n  </div>\r\n);\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChangeFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  value: state.contacts.filter,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onChangeFilter: contactsActions.filterContacts,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from 'react';\r\nimport styles from './Logo.module.css';\r\n\r\nconst Logo = () => <h1 className={styles.text}>Phonebook</h1>;\r\n\r\nexport default Logo;\r\n","import React from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport ContactForm from './contactForm/ContactForm';\r\nimport ContactList from './contactList/ContactList';\r\nimport Filter from './filter/Filter';\r\nimport Logo from './Logo/Logo';\r\nimport stylesLogo from './Logo/Logo.module.css';\r\n\r\nexport default function PhoneBook() {\r\n  return (\r\n    <div>\r\n      <CSSTransition\r\n        in={true}\r\n        appear={true}\r\n        timeout={500}\r\n        classNames={stylesLogo}\r\n        unmountOnExit\r\n      >\r\n        <Logo />\r\n      </CSSTransition>\r\n      <ContactForm />\r\n      <Filter />\r\n      <ContactList />\r\n    </div>\r\n  );\r\n}\r\n","import { createReducer } from '@reduxjs/toolkit';\r\nimport { combineReducers } from 'redux';\r\nimport contactsActions from './contactsActions';\r\n\r\nconst handleAddContact = (state, action) => {\r\n  if (\r\n    action.payload.contact.name === '' ||\r\n    action.payload.contact.number === ''\r\n  ) {\r\n    return state;\r\n  } else if (state.length === 0) {\r\n    return [...state, action.payload.contact];\r\n  } else {\r\n    const names = state.map(contact => contact.name.toLowerCase());\r\n    if (names.includes(action.payload.contact.name.toLowerCase())) {\r\n      alert(`${action.payload.contact.name} is alredy in contacts`);\r\n      return state;\r\n    } else {\r\n      return [...state, action.payload.contact];\r\n    }\r\n  }\r\n};\r\n\r\nconst handleRemoveContact = (state, action) => {\r\n  return state.filter(contact => contact.id !== action.payload);\r\n};\r\n\r\nconst items = createReducer([], {\r\n  [contactsActions.addContact]: handleAddContact,\r\n  [contactsActions.removeContact]: handleRemoveContact,\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [contactsActions.filterContacts]: (state, action) => action.payload,\r\n});\r\n\r\nexport default combineReducers({ items, filter });\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport contactsReducer from './contacts/contactsReducer';\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n  },\r\n});\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './components/App';\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContactForm_container__3OgJL\",\"label\":\"ContactForm_label__3mo3c\",\"input\":\"ContactForm_input__1qo1b\",\"button\":\"ContactForm_button__Eqr4L\"};"],"sourceRoot":""}